plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

ext.'signing.keyId' = System.getenv('SIGNING_KEY_ID')
ext.'signing.password' = System.getenv('SIGNING_PASSWORD')
ext.'signing.secretKeyRingFile' = "D:\\Keys\\secring.gpg"

ext.'ossrhUsername' = System.getenv('OSSRH_USERNAME')
ext.'ossrhPassword' = System.getenv('OSSRH_PASSWORD')

android {
    compileSdk 31
    compileSdkVersion 31
    buildToolsVersion '31.0.0'
    ndkVersion '23.0.7599858'

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        minSdk 19
        targetSdk 31
        versionCode 2
        versionName "1.0.1"
        consumerProguardFiles 'consumer-rules.pro'
    }

    lintOptions {
        abortOnError false
        disable 'TypographyFractions','TypographyQuotes'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    implementation project(path: ':AhmerPdfium')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'io.github.ahmerafzal1:ahmer-utils:1.0.5'
}

tasks.withType(Javadoc).all {
    enabled false
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // The coordinates of the library, being set from variables that we'll set up in a moment
            artifact sourcesJar
            artifact javadocJar
            artifact "$buildDir/outputs/aar/AhmerPDFViewer-release.aar"
            groupId 'io.github.ahmerafzal1'
            artifactId 'ahmer-pdfviewer'
            version android.defaultConfig.versionName

            // Self-explanatory metadata for the most part
            pom {
                name = 'AhmerPDFViewer'
                description = 'Android view for displaying PDFs rendered with PdfiumAndroid'
                url = 'https://github.com/AhmerAfzal1/AhmerPDF'
                packaging = 'aar'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'ahmerafzal1'
                        name = 'Ahmer Afzal'
                        email = 'ahmerafzal@yahoo.com'
                    }
                }
                // Version control info, if you're using GitHub, follow the format as seen here
                scm {
                    connection = 'scm:git:git://github.com:AhmerAfzal1/AhmerPDF.git'
                    developerConnection = 'scm:git:ssh://github.com/AhmerAfzal1/AhmerPDF.git'
                    url = 'https://github.com/AhmerAfzal1/AhmerPDF/tree/master'
                }
            }
        }
    }
    repositories {
        maven {
            name = 'maven'

            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            // You only need this if you want to publish snapshots, otherwise just set the URL
            // to the release repo directly
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
    sign configurations.archives
}